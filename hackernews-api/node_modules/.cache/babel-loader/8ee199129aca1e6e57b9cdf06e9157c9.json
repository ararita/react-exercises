{"ast":null,"code":"var _jsxFileName = \"/Users/vesna/Documents/workspace/react-exercises/src/App.js\",\n    _s = $RefreshSig$();\n\n// import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [storyId, setStoryId] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\"); //https://hacker-news.firebaseio.com/v0/item/12.json?print=pretty\n  //https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\n\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(\"Could not fetch data\");\n    }).then(myJson => {\n      // console.log(myJson);\n      setLoading(true);\n      setData(myJson.splice(20));\n\n      for (let id of myJson) {\n        // console.log(\"id of myJson\", id);\n        fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(\"Could not fetch story id\");\n        }).then(myId => {\n          console.log(\"myId\", myId);\n          setLoading(true);\n          setStoryId(myId);\n        });\n      }\n    }, error => {\n      setLoading(true);\n      setError(error);\n    });\n  }, []);\n  console.log(\"data\", data);\n  console.log(\"storyId\", storyId);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  } else if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", data.map((story, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(storyId.title)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"xDGozDWYC2jp0Qpvk1f+/elohcY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vesna/Documents/workspace/react-exercises/src/App.js"],"names":["useState","useEffect","App","data","setData","storyId","setStoryId","loading","setLoading","error","setError","fetch","then","response","ok","json","Error","myJson","splice","id","myId","console","log","message","map","story","i","JSON","stringify","title"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CAJa,CAMb;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,oEAAF,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,YAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD,KANH,EAOGJ,IAPH,CAQKK,MAAD,IAAY;AACV;AACAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,MAAAA,OAAO,CAACa,MAAM,CAACC,MAAP,CAAc,EAAd,CAAD,CAAP;;AACA,WAAK,IAAIC,EAAT,IAAeF,MAAf,EAAuB;AACrB;AACAN,QAAAA,KAAK,CACF,8CAA6CQ,EAAG,oBAD9C,CAAL,CAGGP,IAHH,CAGSC,QAAD,IAAc;AAClB,cAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,gBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD,SARH,EASGJ,IATH,CASSQ,IAAD,IAAU;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACAZ,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,UAAAA,UAAU,CAACc,IAAD,CAAV;AACD,SAbH;AAcD;AACF,KA7BL,EA8BKX,KAAD,IAAW;AACTD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAjCL;AAmCD,GApCQ,EAoCN,EApCM,CAAT;AAqCAY,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBnB,IAApB;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBjB,OAAvB;;AACA,MAAII,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACc,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAAChB,OAAL,EAAc;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA,mBACqD,GADrD,EAEGJ,IAAI,CAACqB,GAAL,CAAS,CAACC,KAAD,EAAQC,CAAR,kBACR;AAAA,oBAAcC,IAAI,CAACC,SAAL,CAAevB,OAAO,CAACwB,KAAvB;AAAd,WAAUH,CAAV;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;AACF;;GAjEQxB,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["// import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [storyId, setStoryId] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  //https://hacker-news.firebaseio.com/v0/item/12.json?print=pretty\n  //https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\n\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Could not fetch data\");\n      })\n      .then(\n        (myJson) => {\n          // console.log(myJson);\n          setLoading(true);\n          setData(myJson.splice(20));\n          for (let id of myJson) {\n            // console.log(\"id of myJson\", id);\n            fetch(\n              `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`\n            )\n              .then((response) => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(\"Could not fetch story id\");\n              })\n              .then((myId) => {\n                console.log(\"myId\", myId);\n                setLoading(true);\n                setStoryId(myId);\n              });\n          }\n        },\n        (error) => {\n          setLoading(true);\n          setError(error);\n        }\n      );\n  }, []);\n  console.log(\"data\", data);\n\n  console.log(\"storyId\", storyId);\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!loading) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <div>\n          {/* <div>{JSON.stringify(storyId.title)}</div> */}{\" \"}\n          {data.map((story, i) => (\n            <div key={i}>{JSON.stringify(storyId.title)}</div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}