{"ast":null,"code":"var _jsxFileName = \"/Users/vesna/Documents/workspace/react-exercises/src/App.js\",\n    _s = $RefreshSig$();\n\n// import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getStory(id) {\n  fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(\"Could not fetch story id\");\n  }).then(myId => {\n    console.log(\"myId\", myId);\n    setLoading(true);\n    setStory(myId);\n  });\n}\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [story, setStory] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\"); //https://hacker-news.firebaseio.com/v0/item/12.json?print=pretty\n  //https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\n\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(\"Could not fetch data\");\n    }).then(myJson => {\n      // console.log(myJson);\n      setLoading(true);\n      setData(myJson.splice(20)); // setData(myJson);\n\n      for (let id of myJson) {\n        // console.log(\"id of myJson\", id);\n        fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`).then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(\"Could not fetch story id\");\n        }).then(myId => {\n          console.log(\"myId\", myId);\n          setLoading(true);\n          setStory(myId);\n        });\n      }\n    }, error => {\n      setLoading(true);\n      setError(error);\n    });\n  }, []);\n  console.log(\"data:\", data, \"story: \", story);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  } else if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(story)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"qZOfr0vMItJ+q3U6oSdqI0Ju2aI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vesna/Documents/workspace/react-exercises/src/App.js"],"names":["useState","useEffect","getStory","id","fetch","then","response","ok","json","Error","myId","console","log","setLoading","setStory","App","data","setData","story","loading","error","setError","myJson","splice","message","JSON","stringify"],"mappings":"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","sourcesContent":["// import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction getStory(id) {\n  fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error(\"Could not fetch story id\");\n    })\n    .then((myId) => {\n      console.log(\"myId\", myId);\n      setLoading(true);\n      setStory(myId);\n    });\n}\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [story, setStory] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  //https://hacker-news.firebaseio.com/v0/item/12.json?print=pretty\n  //https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\n\n  useEffect(() => {\n    fetch(`https://hacker-news.firebaseio.com/v0/newstories.json?print=pretty`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Could not fetch data\");\n      })\n      .then(\n        (myJson) => {\n          // console.log(myJson);\n          setLoading(true);\n          setData(myJson.splice(20));\n          // setData(myJson);\n          for (let id of myJson) {\n            // console.log(\"id of myJson\", id);\n            fetch(\n              `https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`\n            )\n              .then((response) => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(\"Could not fetch story id\");\n              })\n              .then((myId) => {\n                console.log(\"myId\", myId);\n                setLoading(true);\n                setStory(myId);\n              });\n          }\n        },\n        (error) => {\n          setLoading(true);\n          setError(error);\n        }\n      );\n  }, []);\n  console.log(\"data:\", data, \"story: \", story);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!loading) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <div>\n          <div>{JSON.stringify(story)}</div>{\" \"}\n          {/* {data.map((storyId) => (\n            // <div key={storyId}>{JSON.stringify(story.title)}</div>\n            // <div key={storyId}>{story.title}</div>\n          ))} */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}